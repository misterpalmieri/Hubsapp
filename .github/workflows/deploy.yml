name: "CD (Deploy simples)"

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js 22.x
        uses: actions/setup-node@v4
        with:
          node-version: '22.x'
          cache: 'npm'

      - name: Build local (garantia)
        run: |
          npm ci
          npm run build

      - name: Add SSH key
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_KEY }}

      - name: Known hosts
        run: |
          ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts

      - name: Rsync código para o servidor
        run: |
          rsync -az --delete \
            --exclude ".git" \
            --exclude "node_modules" \
            ./ ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:${{ secrets.APP_DIR }}/

      - name: Instalar deps no servidor (prod)
        run: |
          ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} << 'EOF'
          set -e
          cd ${{ secrets.APP_DIR }}
          npm ci --omit=dev
          EOF

      # === MIGRAÇÕES: escolha UMA das opções e troque o "if" para true ===
      - name: Rodar migrações (Prisma)
        if: ${{ false }}
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
        run: |
          ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} << 'EOF'
          set -e
          cd ${{ secrets.APP_DIR }}
          export DATABASE_URL='${{ secrets.DATABASE_URL }}'
          npx prisma migrate deploy
          EOF

      # - name: Rodar migrações (Knex)
      #   env:
      #     DATABASE_URL: ${{ secrets.DATABASE_URL }}
      #   run: |
      #     ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} << 'EOF'
      #     set -e
      #     cd ${{ secrets.APP_DIR }}
      #     export DATABASE_URL='${{ secrets.DATABASE_URL }}'
      #     npx knex migrate:latest
      #     EOF

      - name: Restart serviço
        run: |
          ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} << 'EOF'
          set -e
          sudo systemctl daemon-reload
          sudo systemctl restart hubsapp
          sudo systemctl status hubsapp --no-pager -l || true
          EOF

  smoke:
    runs-on: ubuntu-latest
    needs: deploy

    steps:
      - name: Smoke test (HTTP 200 esperado)
        run: |
          URL="http://${{ secrets.SSH_HOST }}:3000/health"
          echo "Verificando $URL ..."
          code=$(curl -s -o /dev/null -w "%{http_code}" "$URL")
          echo "HTTP code: $code"
          if [ "$code" -ne 200 ]; then
            echo "Smoke test falhou!"
            exit 1
          fi
