cd ~/hubsapp
mkdir -p .github/workflows
cat > .github/workflows/deploy.yml <<'YAML'
name: CD (Deploy simples)

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js 22.x
        uses: actions/setup-node@v4
        with:
          node-version: '22.x'
          cache: 'npm'

      - name: Build local (garantia)
        run: |
          set -euxo pipefail
          npm ci
          npm run build
          ls -la dist || true   # confirma server.js no runner

      - name: Add SSH key
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_KEY }}

      - name: Known hosts
        run: |
          set -euxo pipefail
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts
          chmod 700 ~/.ssh
          chmod 644 ~/.ssh/known_hosts

      - name: Rsync código para o servidor
        run: |
          set -euxo pipefail
          rsync -azv --delete \
            --exclude ".git" \
            --exclude "node_modules" \
            ./ ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:${{ secrets.APP_DIR }}/
          # listar remoto para garantir que dist/ chegou
          ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "ls -la ${{ secrets.APP_DIR }} && ls -la ${{ secrets.APP_DIR }}/dist || true"

      - name: Instalar deps no servidor (prod)
        run: |
          set -euxo pipefail
          ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} << 'EOF'
          set -euxo pipefail
          cd ${{ secrets.APP_DIR }}
          npm ci --omit=dev
          node -v
          EOF

      - name: Restart serviço
        run: |
          set -euxo pipefail
          ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} << 'EOF'
          set -euxo pipefail
          sudo -n systemctl daemon-reload
          sudo -n systemctl restart hubsapp
          sudo -n systemctl status hubsapp --no-pager -l || true
          EOF

  smoke:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: Add SSH key
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_KEY }}

      - name: Known hosts
        run: |
          set -euxo pipefail
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts
          chmod 700 ~/.ssh
          chmod 644 ~/.ssh/known_hosts

      - name: Smoke test (via SSH, localhost, com retries e logs)
        run: |
          set -euxo pipefail
          ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} << 'EOF'
          set -euxo pipefail
          for i in $(seq 1 10); do
            code=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:3000/health || echo 000)
            echo "Tentativa $i - HTTP: $code"
            if [ "$code" = "200" ]; then
              echo "Smoke OK"
              exit 0
            fi
            sleep 3
          done
          echo "Smoke test falhou após 10 tentativas"
          sudo -n systemctl status hubsapp --no-pager -l || true
          sudo -n journalctl -u hubsapp -n 80 --no-pager || true
          exit 1
          EOF
YAML

git add .github/workflows/deploy.yml
git commit -m "ci: deploy corrigido + smoke via SSH (localhost)"
git push
